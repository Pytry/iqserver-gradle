buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        nexus_iq_cli_version = "1.54.0-01"
    }
}
plugins {
    id 'groovy'
    id 'java-library'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.10.0'
}
apply from: "${projectDir}/buildSrc/integration-test.gradle"
apply from: "${projectDir}/buildSrc/functional-test.gradle"

group = 'org.xitikit.iqserver'
//TODO: use branch semantic versioning
version = '0.0.0.M1'

sourceCompatibility = 1.8

// Write the plugin's classpath to a file to share with the tests
repositories {
    ivy {
        url = 'https://download.sonatype.com'
        layout 'pattern', {
            artifact '[organization]/[module]-[revision].[ext]'
        }
    }
    mavenCentral()
}
// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    compileOnly "clm/scanner:nexus-iq-cli:${nexus_iq_cli_version}@jar"
    implementation localGroovy()
    implementation gradleApi()
    testImplementation gradleTestKit()
    testRuntime files(createClasspathManifest)
}
test {
    enabled false
}
jar {
    /** Create a fat jar**/
    from {
        configurations.compileOnly.collect({
            it.isDirectory() ?
                it :
                zipTree(it)
        })
    }
}

gradlePlugin {
    plugins {
        iqserverPlugin {
            id = 'xitikit.iqserver-gradle'
            displayName = 'IQ Server Gradle Plugin'
            description = 'Provides Extensions and Tasks for Running Security Scans and uploading to a Nexus IQ Server instance.'
            implementationClass = 'org.xitikit.iqserver.gradle.IqServerPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/Xitikit/iqserver-gradle'
    vcsUrl = 'https://github.com/Xitikit/iqserver-gradle.git'
    tags = [
        'sonatype',
        'lifecycle',
        'iq server',
        'oss',
        'governance',
        'risk management',
        'scan',
        'scanning',
        'security',
        'license']
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = "${project.group}" as String
            artifactId = "${project.name}" as String
            version = "${project.version}" as String

            pom {
                name = "${project.name}" as String
                description = 'Nexus IQ Server Gradle Plugin from Xitikit'
                url = 'https://github.com/Xitikit/iqserver-gradle'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Keith Hoopes'
                    }
                }
                scm {
                    connection = 'https://github.com/Xitikit/iqserver-gradle.git'
                    developerConnection = 'https://github.com/Xitikit/iqserver-gradle.git'
                    url = 'https://github.com/Xitikit/iqserver-gradle'
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}
